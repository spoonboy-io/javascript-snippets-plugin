buildscript {
	repositories {
		mavenLocal()
		mavenCentral()
		maven { url "https://plugins.gradle.org/m2/" }
	}
	dependencies {
		classpath "com.github.jengelman.gradle.plugins:shadow:6.0.0"
		classpath "com.bertramlabs.plugins:asset-pipeline-gradle:$assetPipelineVersion"
	}
}

apply plugin: 'java'
apply plugin: 'groovy'
apply plugin: 'idea'
apply plugin: 'maven-publish'
apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: 'asset-pipeline'

group = 'com.morpheusdata'
sourceCompatibility = "$compatibility"
targetCompatibility = "$compatibility"
ext.isReleaseVersion = !version.endsWith("SNAPSHOT")

repositories {
	mavenLocal()
	mavenCentral()
}

configurations {
	provided
}

dependencies {
	provided "com.morpheusdata:morpheus-plugin-api:$pluginApiVersion"
	provided "org.codehaus.groovy:groovy-all:$groovyVersion"
	implementation 'commons-beanutils:commons-beanutils:1.9.3'
	implementation "org.slf4j:slf4j-api:$slf4jVersion"
	implementation "org.slf4j:slf4j-parent:$slf4jVersion"
	implementation 'commons-net:commons-net:3.6'

	// Include morpheus-core and it's dependencies
	testImplementation "com.morpheusdata:morpheus-plugin-api:$pluginApiVersion"
	testImplementation 'io.reactivex.rxjava2:rxjava:2.2.0'
	testImplementation 'org.apache.httpcomponents:httpclient:4.5.3'
	testImplementation 'org.apache.httpcomponents:httpcore:4.4.5'
	testImplementation "org.slf4j:slf4j-parent:$slf4jVersion"

	testImplementation "org.codehaus.groovy:groovy-all:$groovyVersion"
	testImplementation "com.morpheusdata:morpheus-test-provider:0.13.4-SNAPSHOT"
	testImplementation 'net.bytebuddy:byte-buddy:1.9.3'
	testImplementation 'org.objenesis:objenesis:2.6'
	testImplementation "org.spockframework:spock-core:$spockVersion"
	testImplementation 'cglib:cglib-nodep:3.2.12'
}

sourceSets {
	main {
		compileClasspath += configurations.provided
	}
}

jar {
	manifest {
		attributes(
				'Plugin-Class': 'com.morpheusdata.javascriptSnippets.JavascriptSnippetsGlobalUIPlugin',
				'Plugin-Version': version,
		)
	}
}

java {
	withSourcesJar()
	withJavadocJar()
}

test {
	testLogging {
		exceptionFormat = 'full'
		showStandardStreams = true
	}
}

// tasks
tasks.assemble.dependsOn tasks.shadowJar

tasks.register('moveToPluginFolder') {
    doLast {
        ant.move file: "${buildDir}/libs/${project.name}-${version}-all.jar",
                todir: "./plugin"
    }
}

tasks.register('removeArtifacts') {
    doLast {
        ant.delete dir: "./build"
    }
}

tasks.register('make') {
    dependsOn tasks.shadowJar
    dependsOn 'moveToPluginFolder'
    dependsOn 'removeArtifacts'
    tasks.findByName('moveToPluginFolder').mustRunAfter 'shadowJar'
    tasks.findByName('removeArtifacts').mustRunAfter 'moveToPluginFolder'
}

